Map create
	weight-balanced-tree (fromDistinctAscArray) x 933 ops/sec ±0.23% (98 runs sampled)
	Immutable.Map (constructor) x 331 ops/sec ±1.97% (90 runs sampled)
	mori (hashMap) x 477 ops/sec ±0.41% (91 runs sampled)
	Fastest is weight-balanced-tree (fromDistinctAscArray)
Map set
	weight-balanced-tree (insert) x 70.22 ops/sec ±0.16% (74 runs sampled)
	Immutable.Map (set) x 156 ops/sec ±1.76% (85 runs sampled)
	mori (assoc) x 63.23 ops/sec ±1.06% (67 runs sampled)
	Fastest is Immutable.Map (set)
Map get
	weight-balanced-tree (findBy) x 102 ops/sec ±0.40% (77 runs sampled)
	Immutable.Map (get) x 684 ops/sec ±1.07% (95 runs sampled)
	mori (get) x 181 ops/sec ±1.76% (87 runs sampled)
	Fastest is Immutable.Map (get)
Map remove
	weight-balanced-tree (remove) x 120 ops/sec ±0.23% (79 runs sampled)
	Immutable.Map (delete) x 155 ops/sec ±0.93% (85 runs sampled)
	mori (dissoc) x 78.75 ops/sec ±0.41% (70 runs sampled)
	Fastest is Immutable.Map (delete)
Map merge
	weight-balanced-tree (union) x 536 ops/sec ±1.05% (96 runs sampled)
	Immutable.Map (merge) x 801 ops/sec ±1.51% (92 runs sampled)
	mori (merge) x 124 ops/sec ±0.86% (81 runs sampled)
	Fastest is Immutable.Map (merge)
Map equals
	weight-balanced-tree (equals) x 869 ops/sec ±0.19% (97 runs sampled)
	Immutable.Map (equals) x 658 ops/sec ±0.09% (97 runs sampled)
	mori (equals) x 65.51 ops/sec ±0.49% (69 runs sampled)
	Fastest is weight-balanced-tree (equals)
