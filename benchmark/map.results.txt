Map create
	weight-balanced-tree (fromDistinctAscArray) x 906 ops/sec ±0.57% (97 runs sampled)
	Immutable.Map (constructor) x 329 ops/sec ±1.72% (90 runs sampled)
	mori (hashMap) x 548 ops/sec ±0.44% (94 runs sampled)
	Fastest is weight-balanced-tree (fromDistinctAscArray)
Map set
	weight-balanced-tree (insert) x 61.53 ops/sec ±6.47% (65 runs sampled)
	Immutable.Map (set) x 154 ops/sec ±1.84% (84 runs sampled)
	mori (assoc) x 66.09 ops/sec ±1.03% (70 runs sampled)
	Fastest is Immutable.Map (set)
Map get
	weight-balanced-tree (findBy) x 102 ops/sec ±0.36% (77 runs sampled)
	Immutable.Map (get) x 688 ops/sec ±0.88% (96 runs sampled)
	mori (get) x 186 ops/sec ±0.38% (88 runs sampled)
	Fastest is Immutable.Map (get)
Map remove
	weight-balanced-tree (remove) x 94.88 ops/sec ±0.15% (82 runs sampled)
	Immutable.Map (delete) x 151 ops/sec ±0.45% (87 runs sampled)
	mori (dissoc) x 69.00 ops/sec ±0.37% (73 runs sampled)
	Fastest is Immutable.Map (delete)
Map merge
	weight-balanced-tree (union) x 557 ops/sec ±0.24% (96 runs sampled)
	Immutable.Map (merge) x 807 ops/sec ±1.22% (94 runs sampled)
	mori (merge) x 107 ops/sec ±0.26% (80 runs sampled)
	Fastest is Immutable.Map (merge)
Map equals
	weight-balanced-tree (equals) x 863 ops/sec ±0.09% (98 runs sampled)
	Immutable.Map (equals) x 606 ops/sec ±0.26% (98 runs sampled)
	mori (equals) x 59.11 ops/sec ±0.61% (63 runs sampled)
	Fastest is weight-balanced-tree (equals)
